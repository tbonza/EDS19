#! /usr/bin/env python

import argparse
import logging

from okra.logging_utils import enable_log
from okra.repo_mgmt import read_repos, clone_repos, update_repos

logger = logging.getLogger(__name__)

def repo_clone_main(fpath: str, dirpath: str):
    repos = read_repos(fpath)
    clone_repos(repos, dirpath)

def repo_update_main(fpath: str, dirpath: str):
    repos = read_repos(fpath)
    update_repos(repos, dirpath)

def extract_data_main(fpath: str, dirpath: str):
    repos = read_repos(fpath)


parser = argparse.ArgumentParser()
parser.add_argument("action",
                    help="'get', 'update', 'extract_data' for git repos")
parser.add_argument("repo_list",
                    help="file path to list of GitHub repos")
parser.add_argument("directory_path",
                    help="file path to directory storing git repos")
parser.add_argument("logname",
                    help="name of log file")

args = parser.parse_args()
    
enable_log(args.logname)
logger.info("STARTED process")

if args.action == "get":
    logger.info("STARTED cloning github repos")
    repo_clone_main(args.repo_list, args.directory_path)
    logger.info("FINISHED cloning github repos")

elif args.action == "update":
    logger.info("STARTED updating github repos")
    repo_update_main(args.repo_list, args.directory_path)
    logger.info("FINISHED uppdating github repos")

elif args.action == "extract_data":
    logger.info("STARTED extracting data from git repos")
    logger.info("FINISHED extracting data from git repos")

else:
    parser.print_help()

logger.info("COMPLETED process")
    
