AWSTemplateFormatVersion: 2010-09-09
Description: Airflow server backed by Postgres RDS
Parameters:
  KeyName:
    Description: >-
      Name of an existing EC2 KeyPair to enable SSH access into the Airflow web
      server
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Must be the name of an existing EC2 KeyPair
  S3BucketName:
    Description: >-
      REQUIRED - A new S3 Bucket name. This bucket will be used to read and
      write any datasets you need.
    Type: String
    AllowedPattern: .+
  DBPassword:
    Default: airflowpassword
    NoEcho: 'true'
    Description: Airflow database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-97785bed
    us-east-2:
      AMI: ami-f63b1193
    us-west-1:
      AMI: ami-824c4ee2
    us-west-2:
      AMI: ami-f2d3638a
    ca-central-1:
      AMI: ami-a954d1cd
    eu-west-1:
      AMI: ami-d834aba1
    eu-west-2:
      AMI: ami-403e2524
    eu-west-3:
      AMI: ami-8ee056f3
    eu-central-1:
      AMI: ami-5652ce39
    sa-east-1:
      AMI: ami-84175ae8
    ap-south-1:
      AMI: ami-531a4c3c
    ap-southeast-1:
      AMI: ami-68097514
    ap-southeast-2:
      AMI: ami-942dd1f6
    ap-northeast-1:
      AMI: ami-ceafcba8
    ap-northeast-2:
      AMI: ami-863090e8
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref AirflowEC2SecurityGroup
      InstanceType: t2.small
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: Airflow
      ImageId: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      UserData: !Base64 
        'Fn::Sub': >
          #!/bin/bash

          set -x

          exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1

          # Get the latest CloudFormation package

          echo "Installing aws-cfn"

          yum install -y aws-cfn-bootstrap

          # Start cfn-init

          /opt/aws/bin/cfn-init -v -c install --stack ${AWS::StackId} --resource
          EC2Instance --region ${AWS::Region}

          # Install git

          sudo yum install -y git

          # Clone the git repository

          git clone https://github.com/tbonza/EDS19.git

          sudo pip install boto3

          # Install airflow using pip

          echo "Install Apache Airflow"

          sudo SLUGIFY_USES_TEXT_UNIDECODE=yes pip install -U apache-airflow

          # Encrypt connection passwords in metadata db

          sudo pip install apache-airflow[crypto]

          # Postgres operators and hook, support as an Airflow backend

          sudo pip install apache-airflow[postgres]

          sudo -H pip install six==1.10.0

          sudo pip install --upgrade six

          sudo pip install markupsafe

          sudo pip install --upgrade MarkupSafe

          echo 'export PATH=/usr/local/bin:$PATH' >> /root/.bash_profile

          source /root/.bash_profile

          # Initialize Airflow

          airflow initdb

          # Update the RDS connection in the Airflow Config file

          sed -i '/sql_alchemy_conn/s/^/#/g' ~/airflow/airflow.cfg

          sed -i '/sql_alchemy_conn/ a sql_alchemy_conn =
          postgresql://airflow:${DBPassword}@${DBInstance.Endpoint.Address}:${DBInstance.Endpoint.Port}/airflowdb'
          ~/airflow/airflow.cfg

          # Update the type of executor in the Airflow Config file

          sed -i '/executor = SequentialExecutor/s/^/#/g' ~/airflow/airflow.cfg

          sed -i '/executor = SequentialExecutor/ a executor = LocalExecutor'
          ~/airflow/airflow.cfg

          airflow initdb

          # Move all the files to the ~/airflow directory. The Airflow config
          file is setup to hold all the DAG related files in the ~/airflow/
          folder.

          mv aws-concurrent-data-orchestration-pipeline-emr-livy/* ~/airflow/

          # Run Airflow webserver

          airflow webserver
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          install:
            - gcc
        gcc:
          packages:
            yum:
              gcc: []
      'AWS::CloudFormation::Designer':
        id: fd243800-389c-4ebc-aff9-c359e7a892e1
    DependsOn:
      - DBInstance
      - AirflowEC2SecurityGroup
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      DBName: airflowdb
      Engine: postgres
      MasterUsername: airflow
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: db.t2.small
      AllocatedStorage: 5
      DBSecurityGroups:
        - !Ref DBSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3f33957b-4059-4d47-aff7-2af8542b312b
  AirflowEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: AirflowEC2SG
      GroupDescription: Enable HTTP access via port 80 + SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: ab797d37-ed0c-4889-88b7-6efc447c4e9e
  AirflowEMRMasterEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: AirflowEMRMasterSG
      GroupDescription: Airflow EMR Master SG
    DependsOn:
      - AirflowEC2SecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 04b59f6a-bc92-468c-9a5a-d1a8e97874b8
  AirflowEMRMasterInboundRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      FromPort: '8998'
      ToPort: '8998'
      SourceSecurityGroupName: !Ref AirflowEC2SecurityGroup
      GroupName: !Ref AirflowEMRMasterEC2SecurityGroup
  AirflowEMRSlaveEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: AirflowEMRSlaveSG
      GroupDescription: Airflow EMR Slave SG
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 259be7b7-9518-4afa-9978-8aef287b7b79
  DBSecurityGroup:
    Type: 'AWS::RDS::DBSecurityGroup'
    Properties:
      GroupDescription: Frontend Access
      DBSecurityGroupIngress:
        EC2SecurityGroupName: !Ref AirflowEC2SecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: a752b4c5-6c55-46aa-b8e6-c1050e33a636
  EC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: AirflowInstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cb5741ed-71b7-4b99-9363-eb8422f189ee
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: AirflowInstanceProfile
      Roles:
        - !Ref EC2Role
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c17056d3-c8a6-4738-9042-1537b17c3dcb
  EmrRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: EmrRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticmapreduce.amazonaws.com
                - s3.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 25acd1dd-490a-4a0f-bc88-3a12e32ac33b
  EmrEc2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: EmrEc2Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7f6ff9ee-18c4-4c15-b2d7-38b7bb3b246e
  EmrEc2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: EmrEc2InstanceProfile
      Roles:
        - !Ref EmrEc2Role
    Metadata:
      'AWS::CloudFormation::Designer':
        id: aea16e0e-2e48-4560-ab3f-b0f6edfe5a78
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: BucketOwnerFullControl
      BucketName: !Ref S3BucketName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cdddddd4-f398-4e1b-b861-1ed627711024
  EC2V1ARAU:
    Type: 'AWS::EC2::Volume'
    Properties:
      Size: '1500'
      Encrypted: 'false'
      AvailabilityZone: !FindInMap 
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      DeletionPolicy: Snapshot
    Metadata:
      'AWS::CloudFormation::Designer':
        id: def97781-cc1a-4c3a-acc5-a1f3f29938e6
Outputs:
  AirflowEC2PublicDNSName:
    Description: Public DNS Name of the Airflow EC2 instance
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - EC2Instance
          - PublicDnsName
        - ':8080'
Metadata:
  'AWS::CloudFormation::Designer':
    cdddddd4-f398-4e1b-b861-1ed627711024:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    7f6ff9ee-18c4-4c15-b2d7-38b7bb3b246e:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    aea16e0e-2e48-4560-ab3f-b0f6edfe5a78:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - 7f6ff9ee-18c4-4c15-b2d7-38b7bb3b246e
    25acd1dd-490a-4a0f-bc88-3a12e32ac33b:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
    cb5741ed-71b7-4b99-9363-eb8422f189ee:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
    c17056d3-c8a6-4738-9042-1537b17c3dcb:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - cb5741ed-71b7-4b99-9363-eb8422f189ee
    259be7b7-9518-4afa-9978-8aef287b7b79:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 330
      z: 1
      embeds: []
    ab797d37-ed0c-4889-88b7-6efc447c4e9e:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 330
      z: 1
      embeds: []
    a752b4c5-6c55-46aa-b8e6-c1050e33a636:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 330
      z: 1
      embeds: []
    04b59f6a-bc92-468c-9a5a-d1a8e97874b8:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 90
      z: 1
      embeds: []
      dependson:
        - ab797d37-ed0c-4889-88b7-6efc447c4e9e
    3f33957b-4059-4d47-aff7-2af8542b312b:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - a752b4c5-6c55-46aa-b8e6-c1050e33a636
    fd243800-389c-4ebc-aff9-c359e7a892e1:
      size:
        width: 60
        height: 60
      position:
        x: 420
        'y': 330
      z: 1
      embeds: []
      dependson:
        - 3f33957b-4059-4d47-aff7-2af8542b312b
        - ab797d37-ed0c-4889-88b7-6efc447c4e9e
    def97781-cc1a-4c3a-acc5-a1f3f29938e6:
      size:
        width: 60
        height: 60
      position:
        x: 520
        'y': 330
      z: 0
